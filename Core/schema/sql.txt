CREATE DATABASE IF NOT EXISTS grifo_app;
USE grifo_app;

CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'attendant', 'manager') DEFAULT 'attendant',
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE customers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(150),
    phone VARCHAR(20),
    vehicle_plate VARCHAR(15),
    vehicle_brand VARCHAR(50),
    vehicle_model VARCHAR(50),
    customer_type ENUM('regular', 'corporate', 'wholesale') DEFAULT 'regular',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE suppliers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    contact_person VARCHAR(100),
    phone VARCHAR(20),
    email VARCHAR(150),
    address TEXT,
    ruc VARCHAR(20),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE fuel_types (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) UNIQUE NOT NULL,
    description VARCHAR(255),
    color_code VARCHAR(7) DEFAULT '#007bff',
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE fuel_inventory (
    id INT PRIMARY KEY AUTO_INCREMENT,
    fuel_type_id INT NOT NULL,
    current_liters DECIMAL(10,2) DEFAULT 0,
    min_threshold DECIMAL(10,2) DEFAULT 100.00,
    max_capacity DECIMAL(10,2) DEFAULT 5000.00,
    price_per_liter DECIMAL(8,2) NOT NULL,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (fuel_type_id) REFERENCES fuel_types(id) ON DELETE RESTRICT
);

CREATE TABLE fuel_supplies (
    id INT PRIMARY KEY AUTO_INCREMENT,
    supplier_id INT NOT NULL,
    fuel_type_id INT NOT NULL,
    liters DECIMAL(10,2) NOT NULL,
    unit_cost DECIMAL(8,2) NOT NULL,
    total_cost DECIMAL(10,2) NOT NULL,
    supply_date DATE NOT NULL,
    invoice_number VARCHAR(50),
    notes TEXT,
    received_by INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(id) ON DELETE RESTRICT,
    FOREIGN KEY (fuel_type_id) REFERENCES fuel_types(id) ON DELETE RESTRICT,
    FOREIGN KEY (received_by) REFERENCES users(id) ON DELETE RESTRICT
);

CREATE TABLE fuel_sales (
    id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT,
    fuel_type_id INT NOT NULL,
    liters DECIMAL(8,2) NOT NULL,
    price_per_liter DECIMAL(8,2) NOT NULL,
    total DECIMAL(10,2) NOT NULL,
    payment_method ENUM('cash', 'card', 'transfer', 'credit') DEFAULT 'cash',
    sale_type ENUM('retail', 'wholesale') DEFAULT 'retail',
    attendant_id INT NOT NULL,
    sale_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    notes TEXT,
    FOREIGN KEY (customer_id) REFERENCES customers(id) ON DELETE SET NULL,
    FOREIGN KEY (fuel_type_id) REFERENCES fuel_types(id) ON DELETE RESTRICT,
    FOREIGN KEY (attendant_id) REFERENCES users(id) ON DELETE RESTRICT
);

CREATE TABLE expenses (
    id INT PRIMARY KEY AUTO_INCREMENT,
    type ENUM('operational', 'maintenance', 'supplies', 'utilities', 'other') DEFAULT 'operational',
    description VARCHAR(255) NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    expense_date DATE NOT NULL,
    created_by INT NOT NULL,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE RESTRICT
);

CREATE TABLE price_history (
    id INT PRIMARY KEY AUTO_INCREMENT,
    fuel_type_id INT NOT NULL,
    old_price DECIMAL(8,2) NOT NULL,
    new_price DECIMAL(8,2) NOT NULL,
    changed_by INT NOT NULL,
    change_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    reason VARCHAR(255),
    FOREIGN KEY (fuel_type_id) REFERENCES fuel_types(id) ON DELETE CASCADE,
    FOREIGN KEY (changed_by) REFERENCES users(id) ON DELETE RESTRICT
);

CREATE INDEX idx_sales_date ON fuel_sales(sale_date);
CREATE INDEX idx_sales_attendant ON fuel_sales(attendant_id);
CREATE INDEX idx_sales_customer ON fuel_sales(customer_id);
CREATE INDEX idx_supplies_date ON fuel_supplies(supply_date);
CREATE INDEX idx_expenses_date ON expenses(expense_date);